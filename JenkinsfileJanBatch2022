
def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}


node{

buildName 'Dev - ${BUILD_NUMBER}' 
buildDescription 'Pipeline Script - Scriptedway'
 def mavenHome = tool name: "maven3.8.5"

echo "The Node name is:  ${env.NODE_NAME} "
echo "The Job name is:  ${env.JOB_NAME} "


properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])]) 
 
try{
//Checkout Stage
stage('CheckoutCode'){
  sendSlackNotifications('STARTED')
  git branch: 'development', url: 'https://github.com/ramu455/maven-web-application.git'
}

//Build Stage
stage('Build'){
   
sh "$mavenHome/bin/mvn clean packag"
}

//Generate SonarQube Report 
stage('SonarQubeReport'){
sh "$mavenHome/bin/mvn sonar:sonar"
}

//Upload Artifact into Artifcatory repo
stage('UploadArtifcatsIntoNexus'){
sh "$mavenHome/bin/mvn deploy"
}

//Deploy App into Tomcat Server
stage('DeployAppIntoTomcat'){
 sshagent(['deploy_user']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war  ec2-user@43.204.30.67:/opt/apache-tomcat-9.0.65/webapps"
}
}

}//Try block closing
catch(e){
currentBuild.result = "FAILED"
}
finally{
sendSlackNotifications(currentBuild.result)
}

}//Node Closing 
